apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    defaultConfig {
        applicationId "cat.xojan.random1"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode 26
        versionName "2.2.1"
        vectorDrawables.useSupportLibrary true
    }

    signingConfigs {
        release {
            if (project.rootProject.file('gradle.properties').exists()) {
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
                storeFile file(STORE_FILE_PATH)
                storePassword STORE_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.rootProject.file('gradle.properties').exists()) {
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            returnDefaultValues true
        }

    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

androidExtensions {
    experimental true
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {url "https://clojars.org/repo/" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    // Android support
    implementation "com.android.support:appcompat-v7:$supportLib"
    implementation "com.android.support:design:$supportLib"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    // Dagger 2
    kapt "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger:$dagger"

    // JUnit
    testImplementation "junit:junit:$jUnit"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //Leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"

    // Mockito
    testImplementation 'org.mockito:mockito-core:2.10.0'

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    implementation "com.squareup.moshi:moshi-adapters:$moshi"

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.4'

    // RxLint
    implementation 'nl.littlerobots.rxlint:rxlint:1.5'
}
